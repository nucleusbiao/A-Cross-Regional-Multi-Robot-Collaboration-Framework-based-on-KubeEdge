TebLocalPlannerROS:
  odom_topic: odom
  map_frame: /map
    
  # Trajectory
  
  teb_autosize: True
  dt_ref: 0.3
  dt_hysteresis: 0.1
  global_plan_overwrite_orientation: True 
  #覆盖全局路径的方向是预留给3D路径规划使用的，对于车辆的2D规划，可以设置为False，可实现对全局路径的更好跟踪。
  global_plan_viapoint_sep : 0.5  
  #与weight_viapoint有关 从全局规划路径中提取的路点的相互距离,默认设置下为Disable，即只沿全局规划向前寻找，找到的离开局部规划器规划范围前的最后一个点作为局部目标。若全局规划特殊，在无障碍空间仍不走直线（例如，工作中的扫地机器人），则需要将此值设置为设置为一个小的正数。
  max_global_plan_lookahead_dist: 3.0 
  #此距离1.应随车辆最大速度的增大而增大 2.不应超过激光雷达等传感器的可靠测量范围 3. 不应超过局部耗费地图的大小，即不能要求TEB对局部耗费地图以外的部分进行规划。
  feasibility_check_no_poses: 5
    
  # Robot
         
  max_vel_x: 0.6
  max_vel_x_backwards: 0.2 #最大倒车速度，将此速度设置为0或者负数将导致错误。禁止倒车应在penalty部分将前向行驶的权重设置得极高。
  max_vel_theta: 0.3
  acc_lim_x: 0.5 
  #这是速度与加速度约束，注意加速度同样约束减速过程。若电机性能良好且速度不快可以立即刹车，可直接将acc_lim_x设置为0，表示没有约束。若电机不能承受阶跃输入或者响应时间很长，则应当设置加速度限制。
  acc_lim_theta: 0.2
  min_turning_radius: 0.0 
  #最小转弯半径，为避免规划出不可能实现的移动路径，请动手测量实际车辆的转弯半径。此参数事实上约束了舵机的最大转角。有些车辆转向性能不佳，前轮实际转过角度小于舵机角度，则应当给指令转角乘上一增益后再控制舵机，否则车辆将总是不能实现设置的最小转弯半径。请注意此项应当与最大角速度配合设置。
  footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
    type: "line"
#  radius: 0.5 # for type "circular"
    line_start: [-0.8, 0.0]  # for type "line"
    line_end: [0.8, 0.0]  # for type "line"
#  front_offset: 0.2 # for type "two_circles"
#  front_radius: 0.2 # for type "two_circles"
#  rear_offset: 0.2 # for type "two_circles"
#  rear_radius: 0.2 # for type "two_circles"
#  vertices: [ [0.25, -0.05], [0.18, -0.05], [0.18, -0.18], [-0.19, -0.18], [-0.25, 0], [-0.19, 0.18], [0.18, 0.18], [0.18, 0.05], [0.25, 0.05] ] # for type "polygon"

  # GoalTolerance
    
  xy_goal_tolerance: 0.2 #目标跟踪误差。根据车辆运行精度设置
  yaw_goal_tolerance: 0.1 #同上
  free_goal_vel: False
    
  # Obstacles
    
  min_obstacle_dist: 0.5 
  #最小障碍物距离。若设置了车辆的轮廓，则不建议使用此参数。使用车辆轮廓配置footprint_model配合膨胀距离即可实现较好效果。障碍物惩罚权重很高，TEB不会违背这一最小距离约束，因此会把可以通过的缝隙视作不能通过，并终止运行。请注意，此处设置的机器人轮廓必须与局部耗费地图中的一致。
  inflation_dist: 0.6 #障碍物周围的缓冲区
  include_costmap_obstacles: True #必须设置为True后才能规避实时探测到的、建图时不存在的障碍物。
  costmap_obstacles_behind_robot_dist: 1.0
  obstacle_poses_affected: 30
  costmap_converter_plugin: ""
  costmap_converter_spin_thread: True
  costmap_converter_rate: 5

  # Optimization
    
  no_inner_iterations: 5 #每个内迭代中求解器迭代次数 5
  no_outer_iterations: 3 #每次迭代都会调用求解器，该值显著影响计算时间以及收敛性 4
  optimization_activate: True
  optimization_verbose: False
  penalty_epsilon: 0.15 #为速度等约束提供类似膨胀层的缓冲效果。接近限速将产生一定的惩罚值，提高此项可以禁止倒车，但不能完全禁止。
  weight_max_vel_x: 2 #满足最大允许平移速度的优化权重
  weight_max_vel_theta: 1
  weight_acc_lim_x: 1
  weight_acc_lim_theta: 1
  weight_kinematics_nh: 1000
  weight_kinematics_forward_drive: 50 
  # 范围0-1000，禁止规划倒车。如仍规划倒车，说明找不到可行的前向行驶路径。若路径确实存在，可以检查转弯半径、各种 footprint是否正确，膨胀层是否合理。
  weight_kinematics_turning_radius: 1
  weight_optimaltime: 1 #范围0-1000，最优时间权重，提高到3-5时，车辆在直道上快速加速。
  weight_obstacle: 50
  weight_viapoint: 50.0 #跟踪全局路径的权重 一个太精细的分辨率对于一个大的优化权重来说，可能会影响障碍动态避障。

  # Homotopy Class Planner

  enable_homotopy_class_planning: False #多线程路径并行规划，如果走的道路没有过多障碍物，可不用此功能，默认是使用，占用过多CPU资源
  enable_multithreading: True #激活多个线程，以便在不同线程中规划每个轨迹
  simple_exploration: False
  max_number_classes: 4 #考虑到不同轨迹的最大数量
  roadmap_graph_no_samples: 15 #指定为创建路线图而生成的样本数
  roadmap_graph_area_width: 5 #指定该区域的宽度
  h_signature_prescaler: 0.5
  h_signature_threshold: 0.1
  obstacle_keypoint_offset: 0.1
  obstacle_heading_threshold: 0.45
  visualize_hc_graph: False
